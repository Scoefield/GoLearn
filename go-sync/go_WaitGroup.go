package go_sync/*WaitGroup 等待一组goroutinue执行完毕. 主程序调用 Add 添加等待的goroutinue数量.每个goroutinue在执行结束时调用 Done ，此时等待队列数量减1.，主程序通过Wait阻塞，直到等待队列为0. */import (	"fmt"	"sync")func count(a, b int, n *sync.WaitGroup) {	c := a + b	fmt.Println(a, b, c)	defer n.Done()}func syncWaitGroup(){	var wg sync.WaitGroup	for i := 0; i < 10; i++ {		wg.Add(1)		go count(i, i+1, &wg)	}	wg.Wait()}